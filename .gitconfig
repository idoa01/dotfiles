[include]
  # For username / creds / etc
  path = ~/.gitconfig.local
[color]
  branch = auto
  diff = auto
  status = auto
[core]
  # pager = delta
  editor = code --wait
[delta]
  features = side-by-side line-numbers decorations
  syntax-theme = Dracula
  plus-style = syntax "#003800"
  minus-style = syntax "#3f0001"
[delta "decorations"]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  file-decoration-style = none
  hunk-header-decoration-style = cyan box ul
[delta "line-numbers"]
  line-numbers-left-style = cyan
  line-numbers-right-style = cyan
  line-numbers-minus-style = 124
  line-numbers-plus-style = 28
[xinteractive]
  diffFilter = delta --color-only
[diff]
  tool = vscode
[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE
[merge]
  tool = vscode
  renameLimit = 10000
[mergetool]
  cmd = code --wait $MERGED
# [merge]
#   tool = splice
# [mergetool "splice"]
#   cmd = "mvim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
#   trustExitCode = true
[push]
  default = upstream
  autoSetupRemote = true
[alias]
  st = status
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  head = rev-parse HEAD
  aa = add --all
  au = add -u
  dc = diff --cached
  ci = commit -S
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  type = cat-file -t
  dump = cat-file -p
  search = grep
  pullff = pull --ff-only
  ff = merge --ff-only
  recent = log --oneline -10
  oneline = log --oneline
  h = log -1 --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  di = diff
  amend = commit --amend
  r = !git l -20
  l = log --graph --abbrev-commit --date=relative
  la = !git l --all
  fa = fetch --all
  ra = !git r --all
  co = checkout
  mylog = log origin/master..HEAD
  sshow = "!f() { git stash show stash^{/$*} -p; }; f"
  sapply = "!f() { git stash apply stash^{/$*}; }; f"
  stsh = stash --include-untracked
[core]
  excludefile = /home/ido/.gitignore
